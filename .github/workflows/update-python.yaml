# TODO
# * get latest version of pre-commit hooks
name: Update Python template version pins
on:
  schedule:
    - cron: "*/10 * * * *"

env:
  PYTHON_TEMPLATE_LOCATION: "python/{{cookiecutter.project_slug}}"

jobs:
  update_version_pins:
    name: Update Python template version pins
    runs-on: ubuntu-latest
    steps:
      - name: Check out Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Necessary for history and branch creation  # TODO thats from chatgpt

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'  # use minimum supported Python version

      - name: Get Latest Ruff Version
        id: ruff-version
        run: |
          echo "RUFF_VERSION=$(pip show ruff | grep 'Version' | cut -d ' ' -f 2)" >> $GITHUB_ENV

      - name: Update Ruff Version in pyproject.toml
        run: |
          sed -i "s/\"ruff==.*\"/\"ruff==${{ env.RUFF_VERSION }}\"/" ${{ env.PYTHON_TEMPLATE_LOCATION }}/pyproject.toml

      # - name: Update Ruff Version in .pre-commit-config.yaml
      #   run: |
      #     sed -i "s/rev: .* # ruff version/rev: ${{ env.RUFF_VERSION }} # ruff version/" .pre-commit-config.yaml
      - name: Create New Branch for Changes
        run: |
          git checkout -b update-ruff-${{ env.RUFF_VERSION }}

      - name: Commit and Push Changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add ${{ env.PYTHON_TEMPLATE_LOCATION }}/pyproject.toml # Add other files as needed
          git commit -m "Update ruff version to ${{ env.RUFF_VERSION }}" || exit 0 # Exit gracefully if no changes
          git push --set-upstream origin update-ruff-${{ env.RUFF_VERSION }}

      - name: Create Pull Request
        uses: repo-sync/pull-request@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pr_title: "Update Ruff to version ${{ env.RUFF_VERSION }}"
          pr_body: "Automatically update the Ruff version in `pyproject.toml` and `.pre-commit-config.yaml`."
          pr_branch: "update-ruff-${{ env.RUFF_VERSION }}"
